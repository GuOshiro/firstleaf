{"version":3,"file":"component---src-pages-countries-index-tsx-de10bbb50dfa8500b1a9.js","mappings":"8MA+BA,MAhBA,SAAoBA,GAAsB,IAArB,QAAEC,GAAgBD,EACrC,OACEE,EAAAA,cAACC,EAAAA,GAAI,CACHC,UChBY,4BDiBZC,GAAI,cAVOC,EAUeL,EAAQM,KAAKC,OAT3CF,EACGG,cACAC,QAAQ,KAAM,KACdA,QAAQ,WAAY,OAQnBR,EAAAA,cAAA,OACEE,UCrBW,6BDsBXO,IAAKV,EAAQW,MAAMC,IACnBC,IAAK,GAAGb,EAAQM,KAAKC,gBAEvBN,EAAAA,cAAA,QAAME,UCvBM,6BDuBmBH,EAAQM,KAAKC,SAjBjCF,KAoBjB,E,UEWA,MA9BA,SAAoBN,GAAwB,IAAvB,UAAEe,GAAkBf,EACvC,MAAMgB,GAAkBC,EAAAA,EAAAA,UAAQ,IACvBF,EAAUG,MAAK,CAACC,EAAGC,KACxB,MAAMC,EAAQF,EAAEZ,KAAKC,OAAOC,cACtBa,EAAQF,EAAEb,KAAKC,OAAOC,cAE5B,OAAIY,EAAQC,GACF,EAEND,EAAQC,EACH,EAEF,CAAC,KAET,CAACP,IAEJ,OACEb,EAAAA,cAACqB,EAAAA,EAAM,KACLrB,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,MAAIE,UC5BQ,6BD6BTY,EAAgBQ,KAAKvB,GACpBC,EAAAA,cAAA,MAAIuB,IAAKxB,EAAQyB,MACfxB,EAAAA,cAACyB,EAAW,CAAC1B,QAASA,QAMlC,EEPA,MAJA,SAAsBD,GAAkB,IAAjB,KAAE4B,GAAa5B,EACpC,OAAOE,EAAAA,cAAC2B,EAAW,CAACd,UAAWa,EAAKE,WAAWC,OACjD,C","sources":["webpack://firstleaf-challenge/./src/components/CountryItem/index.tsx","webpack://firstleaf-challenge/./src/components/CountryItem/index.module.scss","webpack://firstleaf-challenge/./src/components/CountryList/index.tsx","webpack://firstleaf-challenge/./src/components/CountryList/index.module.scss","webpack://firstleaf-challenge/./src/pages/countries/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Country } from \"../../types/Contry\";\nimport * as styles from \"./index.module.scss\";\n\ntype Props = {\n  country: Country;\n};\n\nconst slugify = (text: string) =>\n  text\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/[^\\w-]+/g, \"\");\n\nfunction CountryList({ country }: Props) {\n  return (\n    <Link\n      className={styles.link}\n      to={`/countries/${slugify(country.name.common)}`}\n    >\n      <img\n        className={styles.image}\n        src={country.flags.svg}\n        alt={`${country.name.common} flag`}\n      />\n      <span className={styles.name}>{country.name.common}</span>\n    </Link>\n  );\n}\n\nexport default CountryList;\n","// extracted by mini-css-extract-plugin\nexport var image = \"index-module--image--5a0c1\";\nexport var link = \"index-module--link--bc4c7\";\nexport var name = \"index-module--name--905e2\";","import React, { useMemo } from \"react\";\nimport { Country } from \"../../types/Contry\";\nimport * as styles from \"./index.module.scss\";\nimport CountryItem from \"../CountryItem\";\nimport Layout from \"../Layout\";\n\ntype Props = {\n  countries: Array<Country>;\n};\n\nfunction CountryList({ countries }: Props) {\n  const sortedCountries = useMemo(() => {\n    return countries.sort((a, b) => {\n      const nameA = a.name.common.toLowerCase();\n      const nameB = b.name.common.toLowerCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [countries]);\n\n  return (\n    <Layout>\n      <h1>Countries</h1>\n      <ul className={styles.list}>\n        {sortedCountries.map((country) => (\n          <li key={country.cca3}>\n            <CountryItem country={country} />\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n\nexport default CountryList;\n","// extracted by mini-css-extract-plugin\nexport var list = \"index-module--list--c559c\";","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Country } from \"../../types/Contry\";\nimport CountryList from \"../../components/CountryList\";\n\nexport const query = graphql`\n  query {\n    allCountry {\n      nodes {\n        name {\n          common\n        }\n        flags {\n          svg\n        }\n        cca3\n      }\n    }\n  }\n`;\n\ntype Props = {\n  data: {\n    allCountry: { nodes: Array<Country> };\n  };\n};\n\nfunction CountriesPage({ data }: Props) {\n  return <CountryList countries={data.allCountry.nodes} />;\n}\n\nexport default CountriesPage;\n"],"names":["_ref","country","React","Link","className","to","text","name","common","toLowerCase","replace","src","flags","svg","alt","countries","sortedCountries","useMemo","sort","a","b","nameA","nameB","Layout","map","key","cca3","CountryItem","data","CountryList","allCountry","nodes"],"sourceRoot":""}