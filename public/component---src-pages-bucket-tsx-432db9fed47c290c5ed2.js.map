{"version":3,"file":"component---src-pages-bucket-tsx-432db9fed47c290c5ed2.js","mappings":"6KAsDA,MA3CA,SAAkBA,GAMP,IALTC,QAASC,EAAc,MACvBC,EAAQ,2BAA0B,KAClCC,GAAO,EAAK,YACZC,EAAc,GAAE,SAChBC,EAAWA,QACLN,EACN,MAAM,EAACC,EAAQ,EAACM,IAAcC,EAAAA,EAAAA,UAASN,IAEvCO,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,aAAY,KAC7BJ,GAAYK,GAEQA,EAAc,EAAIA,EAAc,EADtCR,EAAOF,EAAiB,GAGpC,GACD,KAEH,MAAO,IAAMW,cAAcH,EAAW,GACrC,CAACN,EAAMH,KAEVQ,EAAAA,EAAAA,YAAU,KACQ,IAAZR,GACFK,GACF,GACC,CAACL,EAASK,IAEb,MAAMQ,GAAUC,EAAAA,EAAAA,UAAQ,IAAMC,KAAKC,MAAMhB,EAAU,KAAK,CAACA,IACnDiB,GAAmBH,EAAAA,EAAAA,UAAQ,IAAMd,EAAU,IAAI,CAACA,IAChDkB,GAAUJ,EAAAA,EAAAA,UACd,IAAM,MAAM,IAAID,IAAUM,OAAO,MAAM,IAAIF,IAAmBE,OAAO,MACrE,CAACN,EAASI,IAGZ,OACEG,EAAAA,cAAA,OAAKC,UAAW,kCAAuBjB,KACpCF,GACCkB,EAAAA,cAAA,OAAKC,UAAW,8CAAoCnB,GAEtDkB,EAAAA,cAAA,OAAKC,UAAW,kDAAwCH,GAG9D,C,4FCjDA,MAAMI,EAASvB,IAAwC,IAAvC,UAACwB,EAAS,YAAEC,KAAgBC,GAAK1B,EAC7C,MAAM,EAAC2B,EAAM,EAACC,IAAYpB,EAAAA,EAAAA,UAAS,GAUnC,OACIa,EAAAA,cAAA,SAAAQ,OAAAC,OAAA,CAAQC,KAAK,SAASC,QATNC,KAChB,MAAMC,EAAYP,EAAQH,GAAc,GAAKG,EAAQ,EACrDC,EAASD,EAAQ,GACbO,GACAT,EAAYD,EAChB,EAI4CF,UCfhC,+BDe8DI,GACrEC,EAAM,kBACF,EAsBjB,MAlBqBQ,KACjB,MAAM,EAACC,EAAW,EAACC,IAAiB7B,EAAAA,EAAAA,UAAS,IACvC,EAAC8B,EAAS,EAACC,IAAe/B,EAAAA,EAAAA,WAAS,GAOzC,OACIa,EAAAA,cAAAA,EAAAA,SAAA,KACKiB,GAAYjB,EAAAA,cAAA,UAAI,SAAOe,IACtBE,KAAcF,GAAcf,EAAAA,cAACmB,EAAAA,EAAS,CAACC,KAAM,IAAIC,MAAQC,cAAe1C,QAAS,EAAGE,MAAM,GAAGG,SAAUA,IAAMiC,GAAY,KAC3HlB,EAAAA,cAACE,EAAM,CAACE,YARQmB,KACpBP,EAAcD,EAAa,EAAE,EAOaZ,UAAW,EAAGqB,SAAUP,IAC/D,EEzBX,MARmBQ,IACjBzB,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,kBAEJA,EAAAA,cAACc,EAAY,M","sources":["webpack://firstleaf-challenge/./src/components/Countdown/index.tsx","webpack://firstleaf-challenge/./src/components/TheBucket/index.tsx","webpack://firstleaf-challenge/./src/components/TheBucket/index.module.scss","webpack://firstleaf-challenge/./src/pages/bucket.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport * as styles from \"./index.module.scss\";\n\ntype Props = {\n  seconds: number;\n  label?: string;\n  loop?: boolean;\n  customClass?: string;\n  onFinish?: () => void;\n};\n\nfunction Countdown({\n  seconds: initialSeconds,\n  label = \"Reserving your wines for\",\n  loop = false,\n  customClass = \"\",\n  onFinish = () => {},\n}: Props) {\n  const [seconds, setSeconds] = useState(initialSeconds);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setSeconds((prevSeconds) => {\n        const end = loop ? initialSeconds : 0;\n        const remaining = prevSeconds > 0 ? prevSeconds - 1 : end;\n        return remaining;\n      });\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [loop, seconds]);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      onFinish();\n    }\n  }, [seconds, onFinish]);\n\n  const minutes = useMemo(() => Math.floor(seconds / 60), [seconds]);\n  const remainingSeconds = useMemo(() => seconds % 60, [seconds]);\n  const counter = useMemo(\n    () => `00:${`0${minutes}`.slice(-2)}:${`0${remainingSeconds}`.slice(-2)}`,\n    [minutes, remainingSeconds]\n  );\n\n  return (\n    <div className={`${styles.countdown} ${customClass}`}>\n      {label && (\n        <div className={`${styles.label} countdown-label`}>{label}</div>\n      )}\n      <div className={`${styles.counter} countdown-counter`}>{counter}</div>\n    </div>\n  );\n}\nexport default Countdown;\n","import React, {useState} from \"react\";\nimport * as styles from './index.module.scss';\nimport Countdown from \"../Countdown\";\n\nconst Bucket = ({batchSize, onBatchFull, ...rest}) => {\n    const [count, setCount] = useState(0);\n\n    const updateCount = () => {\n        const batchFull = count % batchSize === 0 && count > 1;\n        setCount(count + 1);\n        if (batchFull) {\n            onBatchFull(batchSize);\n        }\n    }\n\n    return (\n        <button type=\"button\" onClick={updateCount} className={styles.button} {...rest}>\n            {count} glasses poured\n        </button>\n    );\n};\n\nconst ThreeButtons = (): JSX.Element => {\n    const [batchCount, setBatchCount] = useState(0);\n    const [timeIsUp, setTimeIsUp] = useState(false);\n\n\n    const handleFullBatch = () => {\n        setBatchCount(batchCount + 1);\n    }\n\n    return (\n        <>\n            {timeIsUp && <h1>Total {batchCount}</h1>}\n            {!timeIsUp && !!batchCount && <Countdown key={(new Date()).toISOString()} seconds={5} label=\"\" onFinish={() => setTimeIsUp(true)} />}\n            <Bucket onBatchFull={handleFullBatch} batchSize={3} disabled={timeIsUp} />\n        </>\n    );\n};\n\nexport default ThreeButtons;\n","// extracted by mini-css-extract-plugin\nexport var button = \"index-module--button--75c6f\";","import React from \"react\";\nimport ThreeButtons from \"../components/TheBucket\";\n\nconst BucketPage = (): JSX.Element => (\n  <div>\n    <h1>Sample content</h1>\n\n    <ThreeButtons />\n  </div>\n);\n\nexport default BucketPage;\n"],"names":["_ref","seconds","initialSeconds","label","loop","customClass","onFinish","setSeconds","useState","useEffect","intervalId","setInterval","prevSeconds","clearInterval","minutes","useMemo","Math","floor","remainingSeconds","counter","slice","React","className","Bucket","batchSize","onBatchFull","rest","count","setCount","Object","assign","type","onClick","updateCount","batchFull","ThreeButtons","batchCount","setBatchCount","timeIsUp","setTimeIsUp","Countdown","key","Date","toISOString","handleFullBatch","disabled","BucketPage"],"sourceRoot":""}