{"version":3,"file":"component---src-pages-bucket-tsx-187d80bdd73a77f64062.js","mappings":"6KAsDA,MA3CA,SAAkBA,GAMP,IALTC,QAASC,EAAc,MACvBC,EAAQ,2BAA0B,KAClCC,GAAO,EAAK,YACZC,EAAc,GAAE,SAChBC,EAAWA,QACLN,EACN,MAAM,EAACC,EAAQ,EAACM,IAAcC,EAAAA,EAAAA,UAASN,IAEvCO,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,aAAY,KAC7BJ,GAAYK,GAEQA,EAAc,EAAIA,EAAc,EADtCR,EAAOF,EAAiB,GAGpC,GACD,KAEH,MAAO,IAAMW,cAAcH,EAAW,GACrC,CAACN,EAAMH,KAEVQ,EAAAA,EAAAA,YAAU,KACQ,IAAZR,GACFK,GACF,GACC,CAACL,EAASK,IAEb,MAAMQ,GAAUC,EAAAA,EAAAA,UAAQ,IAAMC,KAAKC,MAAMhB,EAAU,KAAK,CAACA,IACnDiB,GAAmBH,EAAAA,EAAAA,UAAQ,IAAMd,EAAU,IAAI,CAACA,IAChDkB,GAAUJ,EAAAA,EAAAA,UACd,IAAM,MAAM,IAAID,IAAUM,OAAO,MAAM,IAAIF,IAAmBE,OAAO,MACrE,CAACN,EAASI,IAGZ,OACEG,EAAAA,cAAA,OAAKC,UAAW,kCAAuBjB,KACpCF,GACCkB,EAAAA,cAAA,OAAKC,UAAW,8CAAoCnB,GAEtDkB,EAAAA,cAAA,OAAKC,UAAW,kDAAwCH,GAG9D,C,qEC1CA,MAJA,SAAenB,GAAuB,IAAtB,SAAEuB,GAAiBvB,EACjC,OAAOqB,EAAAA,cAAA,OAAKC,UCPM,+BDOqBC,EACzC,C,4FECA,SAASC,EAAMxB,GAA8D,IAA7D,UAAEyB,EAAS,YAAEC,EAAW,SAAEC,KAAaC,GAAmB5B,EACxE,MAAM,EAAC6B,EAAM,EAACC,IAAYtB,EAAAA,EAAAA,UAAiB,GAU3C,OACEa,EAAAA,cAAA,SAAAU,OAAAC,OAAA,CACEC,KAAK,SACLC,QAXgBC,KAClBL,EAASD,EAAQ,IACEA,EAAQ,GAAKJ,GAAc,GAE5CC,GACF,EAOEJ,UCxBc,+BDyBVM,EAAI,CACRD,SAAUA,IAETE,EAAM,kBAGb,CAkCA,MAhCA,WACE,MAAM,EAACO,EAAW,EAACC,IAAiB7B,EAAAA,EAAAA,UAAiB,IAC/C,EAAC8B,EAAS,EAACC,IAAe/B,EAAAA,EAAAA,WAAkB,IAC5C,EAACgC,EAAW,EAACC,IAAiBjC,EAAAA,EAAAA,WAAkB,GAatD,OANAC,EAAAA,EAAAA,YAAU,KACJ2B,EAAa,IAAME,GACrBG,GAAc,EAChB,GACC,CAACL,IAGFf,EAAAA,cAAAA,EAAAA,SAAA,KACGiB,GAAYjB,EAAAA,cAAA,UAAI,SAAOe,IACtBE,GAAYE,GACZnB,EAAAA,cAACqB,EAAAA,EAAS,CACRC,KAAK,IAAIC,MAAOC,cAChB5C,QAAS,EACTE,MAAM,GACNG,SAAUA,IAAMiC,GAAY,KAGhClB,EAAAA,cAACG,EAAM,CAACE,YAtBYoB,KACtBT,EAAcD,EAAa,GAC3BK,GAAc,EAAK,EAoBqBhB,UAAW,EAAGE,SAAUW,IAGpE,E,UEpDA,MARmBS,IACjB1B,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAA,UAAI,kBAEJA,EAAAA,cAAC4B,EAAY,M","sources":["webpack://firstleaf-challenge/./src/components/Countdown/index.tsx","webpack://firstleaf-challenge/./src/components/Layout/index.tsx","webpack://firstleaf-challenge/./src/components/Layout/index.module.scss","webpack://firstleaf-challenge/./src/components/TheBucket/index.tsx","webpack://firstleaf-challenge/./src/components/TheBucket/index.module.scss","webpack://firstleaf-challenge/./src/pages/bucket.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport * as styles from \"./index.module.scss\";\n\ntype Props = {\n  seconds: number;\n  label?: string;\n  loop?: boolean;\n  customClass?: string;\n  onFinish?: () => void;\n};\n\nfunction Countdown({\n  seconds: initialSeconds,\n  label = \"Reserving your wines for\",\n  loop = false,\n  customClass = \"\",\n  onFinish = () => {},\n}: Props) {\n  const [seconds, setSeconds] = useState(initialSeconds);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setSeconds((prevSeconds) => {\n        const end = loop ? initialSeconds : 0;\n        const remaining = prevSeconds > 0 ? prevSeconds - 1 : end;\n        return remaining;\n      });\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [loop, seconds]);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      onFinish();\n    }\n  }, [seconds, onFinish]);\n\n  const minutes = useMemo(() => Math.floor(seconds / 60), [seconds]);\n  const remainingSeconds = useMemo(() => seconds % 60, [seconds]);\n  const counter = useMemo(\n    () => `00:${`0${minutes}`.slice(-2)}:${`0${remainingSeconds}`.slice(-2)}`,\n    [minutes, remainingSeconds]\n  );\n\n  return (\n    <div className={`${styles.countdown} ${customClass}`}>\n      {label && (\n        <div className={`${styles.label} countdown-label`}>{label}</div>\n      )}\n      <div className={`${styles.counter} countdown-counter`}>{counter}</div>\n    </div>\n  );\n}\nexport default Countdown;\n","import React from \"react\";\nimport * as styles from \"./index.module.scss\";\n\ntype Props = {\n  children: React.ReactElement | React.ReactElement[];\n};\n\nfunction Layout({ children }: Props) {\n  return <div className={styles.layout}>{children}</div>;\n}\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var layout = \"index-module--layout--54385\";","import React, { useState, useEffect } from \"react\";\nimport * as styles from \"./index.module.scss\";\nimport Countdown from \"../Countdown\";\n\ninterface BucketProps {\n  batchSize: number;\n  onBatchFull: () => void;\n  disabled: boolean;\n}\n\nfunction Bucket({ batchSize, onBatchFull, disabled, ...rest }: BucketProps) {\n  const [count, setCount] = useState<number>(0);\n\n  const updateCount = () => {\n    setCount(count + 1);\n    const batchFull = (count + 1) % batchSize === 0;\n    if (batchFull) {\n      onBatchFull();\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={updateCount}\n      className={styles.button}\n      {...rest}\n      disabled={disabled}\n    >\n      {count} glasses poured\n    </button>\n  );\n}\n\nfunction ThreeButtons() {\n  const [batchCount, setBatchCount] = useState<number>(0);\n  const [timeIsUp, setTimeIsUp] = useState<boolean>(false);\n  const [startTimer, setStartTimer] = useState<boolean>(false);\n\n  const handleFullBatch = () => {\n    setBatchCount(batchCount + 1);\n    setStartTimer(true);\n  };\n\n  useEffect(() => {\n    if (batchCount > 0 && !timeIsUp) {\n      setStartTimer(true);\n    }\n  }, [batchCount]);\n\n  return (\n    <>\n      {timeIsUp && <h1>Total {batchCount}</h1>}\n      {!timeIsUp && startTimer && (\n        <Countdown\n          key={new Date().toISOString()}\n          seconds={5}\n          label=\"\"\n          onFinish={() => setTimeIsUp(true)}\n        />\n      )}\n      <Bucket onBatchFull={handleFullBatch} batchSize={3} disabled={timeIsUp} />\n    </>\n  );\n}\n\nexport default ThreeButtons;\n","// extracted by mini-css-extract-plugin\nexport var button = \"index-module--button--75c6f\";","import React from \"react\";\nimport ThreeButtons from \"../components/TheBucket\";\nimport Layout from \"../components/Layout\";\n\nconst BucketPage = (): JSX.Element => (\n  <Layout>\n    <h1>Sample content</h1>\n\n    <ThreeButtons />\n  </Layout>\n);\n\nexport default BucketPage;\n"],"names":["_ref","seconds","initialSeconds","label","loop","customClass","onFinish","setSeconds","useState","useEffect","intervalId","setInterval","prevSeconds","clearInterval","minutes","useMemo","Math","floor","remainingSeconds","counter","slice","React","className","children","Bucket","batchSize","onBatchFull","disabled","rest","count","setCount","Object","assign","type","onClick","updateCount","batchCount","setBatchCount","timeIsUp","setTimeIsUp","startTimer","setStartTimer","Countdown","key","Date","toISOString","handleFullBatch","BucketPage","Layout","ThreeButtons"],"sourceRoot":""}